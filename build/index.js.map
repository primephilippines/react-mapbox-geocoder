{"version":3,"sources":["../src/index.jsx"],"names":["Geocoder","state","results","focus","loading","searchTime","Date","value","onInput","bind","onKeyDown","clickOption","onResult","onChange","onSelect","focusOnMount","props","input","target","setState","e","endpoint","source","accessToken","proximity","bbox","types","query","which","preventDefault","moveFocus","length","acceptFocus","body","oldSearchTime","onSuggest","features","place","text","dir","Math","max","min","listLocation","inputClass","inputPlaceholder","inputPosition","showLoader","className","resultsClass","resultClass","resultFocusClass","CustomResultList","ResultList","CustomResult","Result","CustomResultLink","ResultLink","CustomInputWrapper","InputWrapper","CustomSearchIcon","SearchIcon","CustomInput","Input","CustomWrapper","Wrapper","Components","ref","map","result","i","id","place_name","Component","propTypes","PropTypes","string","isRequired","element","bool","func","arrayOf","number","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import 'babel-polyfill';\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport search from './search';\r\n\r\nimport {\r\n  Input,\r\n  InputWrapper,\r\n  SearchIcon,\r\n  ResultList,\r\n  Result,\r\n  ResultLink,\r\n  Wrapper,\r\n} from './styles';\r\n\r\nexport default class Geocoder extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      results: [],\r\n      focus: null,\r\n      loading: false,\r\n      searchTime: new Date(),\r\n      value: '',\r\n    };\r\n\r\n    this.onInput = this.onInput.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.clickOption = this.clickOption.bind(this);\r\n    this.onResult = this.onResult.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSelect = this.onSelect.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { focusOnMount } = this.props;\r\n    if (focusOnMount) this.input.focus();\r\n  }\r\n\r\n  onChange({ target }) {\r\n    this.setState({\r\n      value: target.value,\r\n    });\r\n  }\r\n\r\n  onInput(e) {\r\n    this.setState({ loading: true });\r\n    const { value } = e.target;\r\n    if (value === '') {\r\n      this.setState({\r\n        results: [],\r\n        focus: null,\r\n        loading: false,\r\n      });\r\n    } else {\r\n      const {\r\n        endpoint,\r\n        source,\r\n        accessToken,\r\n        proximity,\r\n        bbox,\r\n        types,\r\n      } = this.props;\r\n\r\n      search({\r\n        endpoint,\r\n        source,\r\n        accessToken,\r\n        proximity,\r\n        bbox,\r\n        types,\r\n        query: value,\r\n        onResult: this.onResult,\r\n      });\r\n    }\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    const { results, focus } = this.state;\r\n    switch (e.which) {\r\n      // up\r\n      case 38:\r\n        e.preventDefault();\r\n        this.moveFocus(-1);\r\n        break;\r\n      // down\r\n      case 40:\r\n        this.moveFocus(1);\r\n        break;\r\n      // accept\r\n      case 13:\r\n        if (results.length > 0 && focus == null) {\r\n          this.clickOption(results[0], 0);\r\n        }\r\n        this.acceptFocus();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  onResult(body, searchTime) {\r\n    const { searchTime: oldSearchTime, results } = this.state;\r\n    const { onSuggest } = this.props;\r\n\r\n    // searchTime is compared with the last search to set the state\r\n    // to ensure that a slow xhr response does not scramble the\r\n    // sequence of autocomplete display.\r\n    if (body && body.features && oldSearchTime <= searchTime) {\r\n      this.setState({\r\n        searchTime,\r\n        loading: false,\r\n        results: body.features,\r\n        focus: null,\r\n      });\r\n      onSuggest(results);\r\n    }\r\n  }\r\n\r\n  onSelect(place) {\r\n    const { onSelect } = this.props;\r\n\r\n    this.setState({\r\n      value: '',\r\n      results: [],\r\n    });\r\n\r\n    onSelect(place);\r\n  }\r\n\r\n  setInput(text) {\r\n    this.setState({\r\n      value: text,\r\n    });\r\n  }\r\n\r\n  moveFocus(dir) {\r\n    const { loading, focus, results } = this.state;\r\n    if (loading) return;\r\n    this.setState({\r\n      focus: focus === null\r\n        ? 0 : Math.max(0,\r\n          Math.min(\r\n            results.length - 1,\r\n            focus + dir,\r\n          )),\r\n    });\r\n  }\r\n\r\n  acceptFocus() {\r\n    const { focus, results } = this.state;\r\n    const { onSelect } = this.props;\r\n\r\n    if (focus !== null) {\r\n      this.onSelect(results[focus]);\r\n    }\r\n  }\r\n\r\n  clickOption(place, listLocation) {\r\n    const { onSelect } = this.props;\r\n\r\n    this.onSelect(place);\r\n    this.setState({ focus: listLocation });\r\n\r\n    // focus on the input after click to maintain key traversal\r\n    this.input.focus();\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      inputClass,\r\n      inputPlaceholder,\r\n      inputPosition,\r\n      showLoader,\r\n      className,\r\n      resultsClass,\r\n      resultClass,\r\n      resultFocusClass,\r\n      ResultList: CustomResultList,\r\n      Result: CustomResult,\r\n      ResultLink: CustomResultLink,\r\n      InputWrapper: CustomInputWrapper,\r\n      SearchIcon: CustomSearchIcon,\r\n      Input: CustomInput,\r\n      Wrapper: CustomWrapper,\r\n    } = this.props;\r\n\r\n    const {\r\n      results,\r\n      loading,\r\n      focus,\r\n      value,\r\n    } = this.state;\r\n\r\n    const Components = {\r\n      ResultList: CustomResultList || ResultList,\r\n      Result: CustomResult || Result,\r\n      ResultLink: CustomResultLink || ResultLink,\r\n      InputWrapper: CustomInputWrapper || InputWrapper,\r\n      SearchIcon: CustomSearchIcon || SearchIcon,\r\n      Input: CustomInput || Input,\r\n      Wrapper: CustomWrapper || Wrapper,\r\n    };\r\n\r\n    const input = (\r\n      <Components.InputWrapper>\r\n        <Components.SearchIcon />\r\n        <Components.Input\r\n          innerRef={(ref) => { this.input = ref; }}\r\n          className={inputClass}\r\n          onInput={this.onInput}\r\n          onKeyDown={this.onKeyDown}\r\n          onChange={this.onChange}\r\n          placeholder={inputPlaceholder}\r\n          type=\"text\"\r\n          value={value}\r\n        />\r\n      </Components.InputWrapper>\r\n    );\r\n\r\n    return (\r\n      <Components.Wrapper className={className}>\r\n        {inputPosition === 'top' && input}\r\n        <Components.ResultList className={`\r\n              ${showLoader && loading\r\n          ? 'loading'\r\n          : ''\r\n              }\r\n              ${resultsClass}`}\r\n        >\r\n          {results.length > 0 && (\r\n            results.map((result, i) => (\r\n              <Components.Result key={result.id}>\r\n                <Components.ResultLink\r\n                  type=\"button\"\r\n                  onClick={() => this.clickOption(result, i)}\r\n                  className={`${resultClass} ${i === focus ? resultFocusClass : ''}`}\r\n                  key={result.id}\r\n                >\r\n                  {result.place_name}\r\n                </Components.ResultLink>\r\n              </Components.Result>\r\n            ))\r\n          )}\r\n        </Components.ResultList>\r\n        {inputPosition === 'bottom' && input}\r\n      </Components.Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nGeocoder.propTypes = {\r\n  endpoint: PropTypes.string,\r\n  source: PropTypes.string,\r\n  accessToken: PropTypes.string.isRequired,\r\n\r\n  className: PropTypes.string,\r\n  inputClass: PropTypes.string,\r\n  resultClass: PropTypes.string,\r\n  resultsClass: PropTypes.string,\r\n  resultFocusClass: PropTypes.string,\r\n\r\n  ResultList: PropTypes.element,\r\n  Result: PropTypes.element,\r\n  ResultLink: PropTypes.element,\r\n  InputWrapper: PropTypes.element,\r\n  SearchIcon: PropTypes.element,\r\n  Input: PropTypes.element,\r\n  Wrapper: PropTypes.element,\r\n\r\n  showLoader: PropTypes.bool,\r\n  focusOnMount: PropTypes.bool,\r\n\r\n  inputPosition: PropTypes.string,\r\n  inputPlaceholder: PropTypes.string,\r\n\r\n  onSelect: PropTypes.func.isRequired,\r\n  onSuggest: PropTypes.func,\r\n\r\n  proximity: PropTypes.string,\r\n  bbox: PropTypes.arrayOf(PropTypes.number),\r\n\r\n  types: PropTypes.string,\r\n};\r\n\r\nGeocoder.defaultProps = {\r\n  endpoint: 'https://api.tiles.mapbox.com',\r\n\r\n  inputClass: '',\r\n  resultClass: '',\r\n  resultsClass: '',\r\n  resultFocusClass: 'strong',\r\n\r\n  ResultList: null,\r\n  Result: null,\r\n  ResultLink: null,\r\n  InputWrapper: null,\r\n  SearchIcon: null,\r\n  Input: null,\r\n  Wrapper: null,\r\n\r\n  inputPosition: 'top',\r\n\r\n  inputPlaceholder: 'Search',\r\n\r\n  showLoader: false,\r\n\r\n  source: 'mapbox.places',\r\n  proximity: '',\r\n\r\n  bbox: [],\r\n  types: '',\r\n\r\n  onSuggest: () => null,\r\n  focusOnMount: true,\r\n};\r\n"]}